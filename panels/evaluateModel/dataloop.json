{
  "displayName": "Evaluate Model",
  "name": "Evaluate Model",
  "icon": "icon-dl-status-filled",
  "components": {
    "panels": [
      {
        "name": "pipelineNodePanel",
        "icon": "icon-dl-status-filled",
        "supportedSlots": [
          {
            "type": "pipelineNodeConfig",
            "configuration": {}
          }
        ],
        "conditions": {
          "resources": []
        }
      }
    ],
    "pipelineNodes": [
      {
        "invoke": {
          "type": "function",
          "namespace": "model-evaluation.evaluate_model.evaluate_model"
        },
        "categories": [
          "automation"
        ]
      }
    ],
    "modules": [
      {
        "name": "evaluate_model",
        "versions": {
          "dtlpy": "1.77.10"
        },
        "entryPoint": "modules/evaluate_model.py",
        "className": "Evaluator",
        "initInputs": [],
        "functions": [
          {
            "name": "evaluate_models",
            "displayName": "Evaluate Model",
            "description": "Evaluate a model with a ground truth dataset",
            "input": [
              {
                "name": "model",
                "type": "Model"
              },
              {
                "name": "test_dataset",
                "type": "Dataset"
              },
              {
                "name": "test_filter",
                "type": "Json"
              }
            ],
            "output": [
              {
                "name": "model",
                "type": "Model"
              }
            ],
            "displayIcon": "status-filled",
            "displayName": "Evaluate Model"
          }
        ]
      }
    ],
    "services": [
      {
        "name": "model-evaluation",
        "panelNames": [
          "evaluateModel"
        ],
        "moduleName": "evaluate_model",
        "runtime": {
          "podType": "regular-xs",
          "runnerImage": "gcr.io/viewo-g/piper/agent/runner/cpu/node14:latest",
          "numReplicas": 1,
          "concurrency": 10,
          "pyPackages": {},
          "singleAgent": false,
          "autoscaler": {
            "type": "rabbitmq",
            "minReplicas": 1,
            "maxReplicas": 2,
            "queueLength": 10
          },
          "preemptible": false,
          "executionTimeout": 3600,
          "drainTime": 600,
          "onReset": "failed",
          "runExecutionAsProcess": false
        },
        "maxAttempts": 3
      }
    ]
  }
}
